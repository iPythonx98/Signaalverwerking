ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	rxBuff,4,4
  20              		.comm	txBuff,4,4
  21              		.comm	sampleIn,4,4
  22              		.comm	sampleUit,4,4
  23              		.comm	HPvolume,1,1
  24              		.comm	displayVolume,1,1
  25              		.comm	LineVolume,1,1
  26              		.global	ClipIndicator
  27              		.data
  28              		.type	ClipIndicator, %object
  29              		.size	ClipIndicator, 1
  30              	ClipIndicator:
  31 0000 20       		.byte	32
  32              		.comm	maxL,4,4
  33              		.comm	maxR,4,4
  34              		.comm	cyclusTel,4,4
  35              		.section	.text.berekenMetSamples,"ax",%progbits
  36              		.align	2
  37              		.global	berekenMetSamples
  38              		.thumb
  39              		.thumb_func
  40              		.type	berekenMetSamples, %function
  41              	berekenMetSamples:
  42              	.LFB63:
  43              		.file 1 "main.c"
   1:main.c        **** /*******************************************************************************
   2:main.c        **** *
   3:main.c        **** * Naam student 1:
   4:main.c        **** * Naam student 2:
   5:main.c        **** *
   6:main.c        **** * Datum: 
   7:main.c        **** *
   8:main.c        **** * File Naam: main.c
   9:main.c        **** * Projectnaam: IIR_filterproject
  10:main.c        **** * Versie: 2.0 10/2/2016
  11:main.c        **** * Author: Piet Coussens 
  12:main.c        **** *
  13:main.c        **** * Beschrijving:
  14:main.c        **** *  Demo programma voor het samplen van audio via de codec
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 2


  15:main.c        **** *
  16:main.c        **** * Gebruikte instellingen I2S:
  17:main.c        **** *   Direction:           Tx and Rx
  18:main.c        **** *   WordSelect:          32 bits
  19:main.c        **** *   DataBits:            16 bits
  20:main.c        **** *   DataInterleaving:    Interleaved
  21:main.c        **** *   DMA Request:         Tx and Rx
  22:main.c        **** *   Rx clip detection:   Enabled op 120
  23:main.c        **** *
  24:main.c        **** * Gebruikte instellingen codec
  25:main.c        **** *   Via P1 is het uitgangsniveau van de hoofdtelefoon in te stellen (tussen 0 en 79 dB)
  26:main.c        **** *   Via P2 is de gevoeligheid van de line-ingang in te stellen (tussen 0 en 31 dB)
  27:main.c        **** *   CLIP is een oversturingsindicator die oplicht als het ingangsniveau te hoog is.
  28:main.c        **** *     Deze LED gaat aan als de sample-waarde boven de clip-treshold uitkomt (MSB=120)
  29:main.c        **** *     Regel P2 zo dat deze LED uit blijft. 
  30:main.c        **** *   CLIP kan ook ingesteld worden om op te lichten als de sample-interrupt actief is. 
  31:main.c        **** *     Daarmee kan de lengte van de sample-interrupt gemeten worden
  32:main.c        **** *     Zet daartoe de define CLIPnTIME in de file dma.h op 0 i.p.v. op 1
  33:main.c        **** *   L0 licht op als filter A niet op tijd berekend kan worden
  34:main.c        **** *   L1 licht op als filter B niet op tijd berekend kan worden
  35:main.c        **** *
  36:main.c        **** *   Codec-instellingen: inputLevel: 22, HPlevel: 75, ingangsignaal: 2Vpp
  37:main.c        **** *
  38:main.c        **** ********************************************************************************/
  39:main.c        **** 
  40:main.c        **** #include <project.h>
  41:main.c        **** #include <dspSystem.h>
  42:main.c        **** #include <dma.h>
  43:main.c        **** #include <audioCodec.h>
  44:main.c        **** #include <stdlib.h>
  45:main.c        **** 
  46:main.c        **** // zet filters aan (1) of uit (0) in linker of rechter kanaal
  47:main.c        **** #define USE_FILTER_LINKS 1
  48:main.c        **** #define USE_FILTER_RECHTS 0
  49:main.c        **** // LCD-tekst
  50:main.c        **** #define TITEL1 "Butterworth LPF "
  51:main.c        **** #define TITEL2 "4e orde 2,00 kHz"
  52:main.c        **** 
  53:main.c        **** // Globale variabelen
  54:main.c        **** uint8 HPvolume, displayVolume, LineVolume, ClipIndicator = ' ';
  55:main.c        **** int maxL, maxR;
  56:main.c        **** uint32 cyclusTel;
  57:main.c        **** 
  58:main.c        **** void berekenMetSamples(){
  44              		.loc 1 58 0
  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 1, uses_anonymous_args = 0
  48 0000 80B5     		push	{r7, lr}
  49              		.cfi_def_cfa_offset 8
  50              		.cfi_offset 7, -8
  51              		.cfi_offset 14, -4
  52 0002 00AF     		add	r7, sp, #0
  53              		.cfi_def_cfa_register 7
  59:main.c        ****     // zet hier je code voor de berekeningen met de samples
  60:main.c        ****     // check of filterblok klaar is, indien niet, zet L0
  61:main.c        **** #if USE_FILTER_LINKS == 1
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 3


  62:main.c        ****     if (Filter_IsInterruptChannelA() == 0) {
  54              		.loc 1 62 0
  55 0004 274B     		ldr	r3, .L4
  56 0006 1B78     		ldrb	r3, [r3]
  57 0008 DBB2     		uxtb	r3, r3
  58 000a 03F00803 		and	r3, r3, #8
  59 000e 002B     		cmp	r3, #0
  60 0010 0CD1     		bne	.L2
  63:main.c        ****         sampleUit[LINKS] = 0;
  61              		.loc 1 63 0
  62 0012 254B     		ldr	r3, .L4+4
  63 0014 0022     		movs	r2, #0
  64 0016 1A80     		strh	r2, [r3]	@ movhi
  64:main.c        ****         LEDs_Write(LEDs_Read() | 0x01);
  65              		.loc 1 64 0
  66 0018 FFF7FEFF 		bl	LEDs_Read
  67 001c 0346     		mov	r3, r0
  68 001e 43F00103 		orr	r3, r3, #1
  69 0022 DBB2     		uxtb	r3, r3
  70 0024 1846     		mov	r0, r3
  71 0026 FFF7FEFF 		bl	LEDs_Write
  72 002a 0FE0     		b	.L3
  73              	.L2:
  65:main.c        ****     }
  66:main.c        ****     else {
  67:main.c        ****         sampleUit[LINKS] = Filter_Read16(Filter_CHANNEL_A);
  74              		.loc 1 67 0
  75 002c 0020     		movs	r0, #0
  76 002e FFF7FEFF 		bl	Filter_Read16
  77 0032 0346     		mov	r3, r0
  78 0034 1AB2     		sxth	r2, r3
  79 0036 1C4B     		ldr	r3, .L4+4
  80 0038 1A80     		strh	r2, [r3]	@ movhi
  68:main.c        ****         LEDs_Write(LEDs_Read() & 0xE);
  81              		.loc 1 68 0
  82 003a FFF7FEFF 		bl	LEDs_Read
  83 003e 0346     		mov	r3, r0
  84 0040 03F00E03 		and	r3, r3, #14
  85 0044 DBB2     		uxtb	r3, r3
  86 0046 1846     		mov	r0, r3
  87 0048 FFF7FEFF 		bl	LEDs_Write
  88              	.L3:
  69:main.c        ****     }
  70:main.c        ****     Filter_Write16(Filter_CHANNEL_A, sampleIn[LINKS]);
  89              		.loc 1 70 0
  90 004c 174B     		ldr	r3, .L4+8
  91 004e B3F90030 		ldrsh	r3, [r3]
  92 0052 9BB2     		uxth	r3, r3
  93 0054 1946     		mov	r1, r3
  94 0056 0020     		movs	r0, #0
  95 0058 FFF7FEFF 		bl	Filter_Write16
  71:main.c        **** #else
  72:main.c        ****     sampleUit[LINKS] = sampleIn[LINKS];
  73:main.c        **** #endif
  74:main.c        **** #if USE_FILTER_RECHTS == 1
  75:main.c        ****     if (Filter_IsInterruptChannelB() == 0) {
  76:main.c        ****         sampleUit[RECHTS] = 0;
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 4


  77:main.c        ****         LEDs_Write(LEDs_Read() | 0x02);
  78:main.c        ****     }
  79:main.c        ****     else {
  80:main.c        ****         sampleUit[RECHTS] = Filter_Read16(Filter_CHANNEL_B);
  81:main.c        ****         LEDs_Write(LEDs_Read() & 0xD);
  82:main.c        ****     }
  83:main.c        ****     Filter_Write16(Filter_CHANNEL_B, sampleIn[RECHTS]);
  84:main.c        **** #else
  85:main.c        ****     sampleUit[RECHTS] = sampleIn[RECHTS];
  96              		.loc 1 85 0
  97 005c 134B     		ldr	r3, .L4+8
  98 005e B3F90220 		ldrsh	r2, [r3, #2]
  99 0062 114B     		ldr	r3, .L4+4
 100 0064 5A80     		strh	r2, [r3, #2]	@ movhi
  86:main.c        **** #endif
  87:main.c        ****     
  88:main.c        ****     // Dit is niet strikt nodig, maar dient om het maximum signaalniveau op het LCD te tonen
  89:main.c        ****     // Deze berekening kost 1,5 us
  90:main.c        ****     maxL = MAX(ABS(sampleIn[LINKS]) , maxL);
 101              		.loc 1 90 0
 102 0066 114B     		ldr	r3, .L4+8
 103 0068 B3F90030 		ldrsh	r3, [r3]
 104 006c 83EAE372 		eor	r2, r3, r3, asr #31
 105 0070 A2EBE372 		sub	r2, r2, r3, asr #31
 106 0074 0E4B     		ldr	r3, .L4+12
 107 0076 1B68     		ldr	r3, [r3]
 108 0078 9342     		cmp	r3, r2
 109 007a B8BF     		it	lt
 110 007c 1346     		movlt	r3, r2
 111 007e 0C4A     		ldr	r2, .L4+12
 112 0080 1360     		str	r3, [r2]
  91:main.c        ****     maxR = MAX(ABS(sampleIn[RECHTS]), maxR);
 113              		.loc 1 91 0
 114 0082 0A4B     		ldr	r3, .L4+8
 115 0084 B3F90230 		ldrsh	r3, [r3, #2]
 116 0088 83EAE372 		eor	r2, r3, r3, asr #31
 117 008c A2EBE372 		sub	r2, r2, r3, asr #31
 118 0090 084B     		ldr	r3, .L4+16
 119 0092 1B68     		ldr	r3, [r3]
 120 0094 9342     		cmp	r3, r2
 121 0096 B8BF     		it	lt
 122 0098 1346     		movlt	r3, r2
 123 009a 064A     		ldr	r2, .L4+16
 124 009c 1360     		str	r3, [r2]
  92:main.c        **** }
 125              		.loc 1 92 0
 126 009e 00BF     		nop
 127 00a0 80BD     		pop	{r7, pc}
 128              	.L5:
 129 00a2 00BF     		.align	2
 130              	.L4:
 131 00a4 84C70040 		.word	1073792900
 132 00a8 00000000 		.word	sampleUit
 133 00ac 00000000 		.word	sampleIn
 134 00b0 00000000 		.word	maxL
 135 00b4 00000000 		.word	maxR
 136              		.cfi_endproc
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 5


 137              	.LFE63:
 138              		.size	berekenMetSamples, .-berekenMetSamples
 139              		.section	.rodata
 140              		.align	2
 141              	.LC0:
 142 0000 42757474 		.ascii	"Butterworth LPF \000"
 142      6572776F 
 142      72746820 
 142      4C504620 
 142      00
 143 0011 000000   		.align	2
 144              	.LC1:
 145 0014 3465206F 		.ascii	"4e orde 2,00 kHz\000"
 145      72646520 
 145      322C3030 
 145      206B487A 
 145      00
 146 0025 000000   		.align	2
 147              	.LC2:
 148 0028 50313A20 		.ascii	"P1: Vol uitgang\000"
 148      566F6C20 
 148      75697467 
 148      616E6700 
 149              		.align	2
 150              	.LC3:
 151 0038 50323A20 		.ascii	"P2: Level ingang\000"
 151      4C657665 
 151      6C20696E 
 151      67616E67 
 151      00
 152 0049 000000   		.align	2
 153              	.LC4:
 154 004c 4C65763A 		.ascii	"Lev:   HP:  \000"
 154      20202048 
 154      503A2020 
 154      00
 155 0059 000000   		.align	2
 156              	.LC5:
 157 005c 4C696E65 		.ascii	"Line:\000"
 157      3A00
 158              		.section	.text.main,"ax",%progbits
 159              		.align	2
 160              		.global	main
 161              		.thumb
 162              		.thumb_func
 163              		.type	main, %function
 164              	main:
 165              	.LFB64:
  93:main.c        **** 
  94:main.c        **** int main()
  95:main.c        **** {   
 166              		.loc 1 95 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 1, uses_anonymous_args = 0
 170 0000 80B5     		push	{r7, lr}
 171              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 6


 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
  96:main.c        ****     // Setup-gedeelte van het hoofdprogramma
  97:main.c        ****     LEDs_Write(LEDs_Read() | 0x03);
 176              		.loc 1 97 0
 177 0004 FFF7FEFF 		bl	LEDs_Read
 178 0008 0346     		mov	r3, r0
 179 000a 43F00303 		orr	r3, r3, #3
 180 000e DBB2     		uxtb	r3, r3
 181 0010 1846     		mov	r0, r3
 182 0012 FFF7FEFF 		bl	LEDs_Write
  98:main.c        ****     CyGlobalIntEnable;              // Enable global interrupts
 183              		.loc 1 98 0
 184              		.syntax unified
 185              	@ 98 "main.c" 1
 186 0016 62B6     		CPSIE   i
 187              	@ 0 "" 2
  99:main.c        ****     I2C_Codec_control_Start();      // I2C start
 188              		.loc 1 99 0
 189              		.thumb
 190              		.syntax unified
 191 0018 FFF7FEFF 		bl	I2C_Codec_control_Start
 100:main.c        ****     LCD_Start();
 192              		.loc 1 100 0
 193 001c FFF7FEFF 		bl	LCD_Start
 101:main.c        ****     LCD_WriteControl(LCD_CLEAR_DISPLAY);
 194              		.loc 1 101 0
 195 0020 0120     		movs	r0, #1
 196 0022 FFF7FEFF 		bl	LCD_WriteControl
 102:main.c        ****     LCD_Position(0u, 0u);
 197              		.loc 1 102 0
 198 0026 0021     		movs	r1, #0
 199 0028 0020     		movs	r0, #0
 200 002a FFF7FEFF 		bl	LCD_Position
 103:main.c        ****     LCD_PrintString(TITEL1);
 201              		.loc 1 103 0
 202 002e 9A48     		ldr	r0, .L20
 203 0030 FFF7FEFF 		bl	LCD_PrintString
 104:main.c        ****     LCD_Position(1u, 0u);
 204              		.loc 1 104 0
 205 0034 0021     		movs	r1, #0
 206 0036 0120     		movs	r0, #1
 207 0038 FFF7FEFF 		bl	LCD_Position
 105:main.c        ****     LCD_PrintString(TITEL2);
 208              		.loc 1 105 0
 209 003c 9748     		ldr	r0, .L20+4
 210 003e FFF7FEFF 		bl	LCD_PrintString
 106:main.c        ****     CyDelay(1000);
 211              		.loc 1 106 0
 212 0042 4FF47A70 		mov	r0, #1000
 213 0046 FFF7FEFF 		bl	CyDelay
 107:main.c        ****     LCD_WriteControl(LCD_CLEAR_DISPLAY);
 214              		.loc 1 107 0
 215 004a 0120     		movs	r0, #1
 216 004c FFF7FEFF 		bl	LCD_WriteControl
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 7


 108:main.c        ****     LCD_Position(0u, 0u);
 217              		.loc 1 108 0
 218 0050 0021     		movs	r1, #0
 219 0052 0020     		movs	r0, #0
 220 0054 FFF7FEFF 		bl	LCD_Position
 109:main.c        ****     LCD_PrintString("P1: Vol uitgang");
 221              		.loc 1 109 0
 222 0058 9148     		ldr	r0, .L20+8
 223 005a FFF7FEFF 		bl	LCD_PrintString
 110:main.c        ****     LCD_Position(1u, 0u);
 224              		.loc 1 110 0
 225 005e 0021     		movs	r1, #0
 226 0060 0120     		movs	r0, #1
 227 0062 FFF7FEFF 		bl	LCD_Position
 111:main.c        ****     LCD_PrintString("P2: Level ingang");
 228              		.loc 1 111 0
 229 0066 8F48     		ldr	r0, .L20+12
 230 0068 FFF7FEFF 		bl	LCD_PrintString
 112:main.c        ****     CyDelay(500);
 231              		.loc 1 112 0
 232 006c 4FF4FA70 		mov	r0, #500
 233 0070 FFF7FEFF 		bl	CyDelay
 113:main.c        ****     LCD_WriteControl(LCD_CLEAR_DISPLAY);
 234              		.loc 1 113 0
 235 0074 0120     		movs	r0, #1
 236 0076 FFF7FEFF 		bl	LCD_WriteControl
 114:main.c        ****     LCD_Position(0u, 0u);
 237              		.loc 1 114 0
 238 007a 0021     		movs	r1, #0
 239 007c 0020     		movs	r0, #0
 240 007e FFF7FEFF 		bl	LCD_Position
 115:main.c        ****     LCD_PrintString("Lev:   HP:  ");
 241              		.loc 1 115 0
 242 0082 8948     		ldr	r0, .L20+16
 243 0084 FFF7FEFF 		bl	LCD_PrintString
 116:main.c        ****     LCD_Position(1u, 0u);
 244              		.loc 1 116 0
 245 0088 0021     		movs	r1, #0
 246 008a 0120     		movs	r0, #1
 247 008c FFF7FEFF 		bl	LCD_Position
 117:main.c        ****     LCD_PrintString("Line:");
 248              		.loc 1 117 0
 249 0090 8648     		ldr	r0, .L20+20
 250 0092 FFF7FEFF 		bl	LCD_PrintString
 118:main.c        ****     sampleUit[LINKS] = 0;
 251              		.loc 1 118 0
 252 0096 864B     		ldr	r3, .L20+24
 253 0098 0022     		movs	r2, #0
 254 009a 1A80     		strh	r2, [r3]	@ movhi
 119:main.c        ****     sampleUit[RECHTS]  = 0;
 255              		.loc 1 119 0
 256 009c 844B     		ldr	r3, .L20+24
 257 009e 0022     		movs	r2, #0
 258 00a0 5A80     		strh	r2, [r3, #2]	@ movhi
 120:main.c        ****     initCodec();                    // initialiseer codec
 259              		.loc 1 120 0
 260 00a2 FFF7FEFF 		bl	initCodec
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 8


 121:main.c        ****     VOL_Start();                    // start ADC in continious mode
 261              		.loc 1 121 0
 262 00a6 FFF7FEFF 		bl	VOL_Start
 122:main.c        ****     VOL_StartConvert();
 263              		.loc 1 122 0
 264 00aa FFF7FEFF 		bl	VOL_StartConvert
 123:main.c        ****     LINE_Start();                   // start ADC in continious mode
 265              		.loc 1 123 0
 266 00ae FFF7FEFF 		bl	LINE_Start
 124:main.c        ****     LINE_StartConvert();
 267              		.loc 1 124 0
 268 00b2 FFF7FEFF 		bl	LINE_StartConvert
 125:main.c        **** 
 126:main.c        ****     AnalogeIngang_L_Start();        // opamps starten
 269              		.loc 1 126 0
 270 00b6 FFF7FEFF 		bl	AnalogeIngang_L_Start
 127:main.c        ****     AnalogeIngang_R_Start();
 271              		.loc 1 127 0
 272 00ba FFF7FEFF 		bl	AnalogeIngang_R_Start
 128:main.c        **** 	// Filterblok starten, interrupt register bits aanzetten voor polling
 129:main.c        ****     Filter_Start(); 
 273              		.loc 1 129 0
 274 00be FFF7FEFF 		bl	Filter_Start
 130:main.c        ****     LCD_Position(0u, 15u);
 275              		.loc 1 130 0
 276 00c2 0F21     		movs	r1, #15
 277 00c4 0020     		movs	r0, #0
 278 00c6 FFF7FEFF 		bl	LCD_Position
 131:main.c        **** #if USE_FILTER_LINKS == 1
 132:main.c        ****     Filter_INT_CTRL_REG |= (1 << Filter_CHANNEL_A);
 279              		.loc 1 132 0
 280 00ca 7A4A     		ldr	r2, .L20+28
 281 00cc 794B     		ldr	r3, .L20+28
 282 00ce 1B78     		ldrb	r3, [r3]
 283 00d0 DBB2     		uxtb	r3, r3
 284 00d2 43F00103 		orr	r3, r3, #1
 285 00d6 DBB2     		uxtb	r3, r3
 286 00d8 1370     		strb	r3, [r2]
 133:main.c        ****     LCD_PutChar('L');
 287              		.loc 1 133 0
 288 00da 4C20     		movs	r0, #76
 289 00dc FFF7FEFF 		bl	LCD_PutChar
 134:main.c        ****     LCD_Position(0u, 14u);
 290              		.loc 1 134 0
 291 00e0 0E21     		movs	r1, #14
 292 00e2 0020     		movs	r0, #0
 293 00e4 FFF7FEFF 		bl	LCD_Position
 135:main.c        **** #endif
 136:main.c        **** #if USE_FILTER_RECHTS == 1
 137:main.c        ****     Filter_INT_CTRL_REG |= (1 << Filter_CHANNEL_B);
 138:main.c        ****     LCD_PutChar('R');
 139:main.c        **** #endif
 140:main.c        ****     
 141:main.c        ****     I2S_EN_Write(1);                // zet de codec-klok voor I2S interface aan
 294              		.loc 1 141 0
 295 00e8 0120     		movs	r0, #1
 296 00ea FFF7FEFF 		bl	I2S_EN_Write
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 9


 142:main.c        ****     
 143:main.c        ****     // Configureer DMAs voor zenden en ontvangen via I2S
 144:main.c        ****     DmaRxConfiguration();
 297              		.loc 1 144 0
 298 00ee FFF7FEFF 		bl	DmaRxConfiguration
 145:main.c        ****     DmaTxConfiguration();
 299              		.loc 1 145 0
 300 00f2 FFF7FEFF 		bl	DmaTxConfiguration
 146:main.c        ****     
 147:main.c        ****     // Declareer interrupt-routines voor zenden en ontvangen via I2S
 148:main.c        ****     SampleVraag_StartEx(sampleIntTx_ISR);
 301              		.loc 1 148 0
 302 00f6 7048     		ldr	r0, .L20+32
 303 00f8 FFF7FEFF 		bl	SampleVraag_StartEx
 149:main.c        ****     SampleKlaar_StartEx(sampleIntRx_ISR);
 304              		.loc 1 149 0
 305 00fc 6F48     		ldr	r0, .L20+36
 306 00fe FFF7FEFF 		bl	SampleKlaar_StartEx
 150:main.c        **** 
 151:main.c        ****     I2S_Codec_audio_Start();        // Start I2S-interface
 307              		.loc 1 151 0
 308 0102 FFF7FEFF 		bl	I2S_Codec_audio_Start
 152:main.c        ****     I2S_Codec_audio_EnableRx();     // Enable Rx direction 
 309              		.loc 1 152 0
 310 0106 FFF7FEFF 		bl	I2S_Codec_audio_EnableRx
 153:main.c        ****     I2S_Codec_audio_EnableTx();     // Enable Tx direction 
 311              		.loc 1 153 0
 312 010a FFF7FEFF 		bl	I2S_Codec_audio_EnableTx
 154:main.c        ****     LEDs_Write(LEDs_Read() & 0x0C);
 313              		.loc 1 154 0
 314 010e FFF7FEFF 		bl	LEDs_Read
 315 0112 0346     		mov	r3, r0
 316 0114 03F00C03 		and	r3, r3, #12
 317 0118 DBB2     		uxtb	r3, r3
 318 011a 1846     		mov	r0, r3
 319 011c FFF7FEFF 		bl	LEDs_Write
 155:main.c        ****     
 156:main.c        ****     cyclusTel = 0;
 320              		.loc 1 156 0
 321 0120 674B     		ldr	r3, .L20+40
 322 0122 0022     		movs	r2, #0
 323 0124 1A60     		str	r2, [r3]
 324              	.L19:
 157:main.c        ****     for(;;) {
 158:main.c        ****         // Loop-gedeelte van het hoofdprogramma
 159:main.c        **** 
 160:main.c        ****         // Line gevoeligheid-instelling op het display
 161:main.c        ****         LineVolume = StelLineVolumeIn(LINE_GetResult8());
 325              		.loc 1 161 0
 326 0126 FFF7FEFF 		bl	LINE_GetResult8
 327 012a 0346     		mov	r3, r0
 328 012c DBB2     		uxtb	r3, r3
 329 012e 1846     		mov	r0, r3
 330 0130 FFF7FEFF 		bl	StelLineVolumeIn
 331 0134 0346     		mov	r3, r0
 332 0136 1A46     		mov	r2, r3
 333 0138 624B     		ldr	r3, .L20+44
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 10


 334 013a 1A70     		strb	r2, [r3]
 162:main.c        ****         LCD_Position(0u,4u);
 335              		.loc 1 162 0
 336 013c 0421     		movs	r1, #4
 337 013e 0020     		movs	r0, #0
 338 0140 FFF7FEFF 		bl	LCD_Position
 163:main.c        ****         if (LineVolume < 10) LCD_PutChar(' ');
 339              		.loc 1 163 0
 340 0144 5F4B     		ldr	r3, .L20+44
 341 0146 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 342 0148 092B     		cmp	r3, #9
 343 014a 02D8     		bhi	.L7
 344              		.loc 1 163 0 is_stmt 0 discriminator 1
 345 014c 2020     		movs	r0, #32
 346 014e FFF7FEFF 		bl	LCD_PutChar
 347              	.L7:
 164:main.c        ****         LCD_PrintNumber(LineVolume);
 348              		.loc 1 164 0 is_stmt 1
 349 0152 5C4B     		ldr	r3, .L20+44
 350 0154 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 351 0156 1846     		mov	r0, r3
 352 0158 FFF7FEFF 		bl	LCD_PrintU32Number
 165:main.c        **** 
 166:main.c        ****         // Als niveau te hoog, dan meld dat op LCD
 167:main.c        ****         if(CLIP_Read()) ClipIndicator = '!';
 353              		.loc 1 167 0
 354 015c FFF7FEFF 		bl	CLIP_Read
 355 0160 0346     		mov	r3, r0
 356 0162 002B     		cmp	r3, #0
 357 0164 02D0     		beq	.L8
 358              		.loc 1 167 0 is_stmt 0 discriminator 1
 359 0166 584B     		ldr	r3, .L20+48
 360 0168 2122     		movs	r2, #33
 361 016a 1A70     		strb	r2, [r3]
 362              	.L8:
 168:main.c        ****         
 169:main.c        ****         // HP volume-instelling op het display
 170:main.c        ****         HPvolume = StelHPvolumeIn(VOL_GetResult8());
 363              		.loc 1 170 0 is_stmt 1
 364 016c FFF7FEFF 		bl	VOL_GetResult8
 365 0170 0346     		mov	r3, r0
 366 0172 DBB2     		uxtb	r3, r3
 367 0174 1846     		mov	r0, r3
 368 0176 FFF7FEFF 		bl	StelHPvolumeIn
 369 017a 0346     		mov	r3, r0
 370 017c 1A46     		mov	r2, r3
 371 017e 534B     		ldr	r3, .L20+52
 372 0180 1A70     		strb	r2, [r3]
 171:main.c        ****         LCD_Position(0u,10u);
 373              		.loc 1 171 0
 374 0182 0A21     		movs	r1, #10
 375 0184 0020     		movs	r0, #0
 376 0186 FFF7FEFF 		bl	LCD_Position
 172:main.c        ****         displayVolume = HPvolume-48;
 377              		.loc 1 172 0
 378 018a 504B     		ldr	r3, .L20+52
 379 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 11


 380 018e 303B     		subs	r3, r3, #48
 381 0190 DAB2     		uxtb	r2, r3
 382 0192 4F4B     		ldr	r3, .L20+56
 383 0194 1A70     		strb	r2, [r3]
 173:main.c        ****         if (displayVolume < 10) LCD_PutChar(' ');
 384              		.loc 1 173 0
 385 0196 4E4B     		ldr	r3, .L20+56
 386 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 387 019a 092B     		cmp	r3, #9
 388 019c 02D8     		bhi	.L9
 389              		.loc 1 173 0 is_stmt 0 discriminator 1
 390 019e 2020     		movs	r0, #32
 391 01a0 FFF7FEFF 		bl	LCD_PutChar
 392              	.L9:
 174:main.c        ****         LCD_PrintNumber(displayVolume);
 393              		.loc 1 174 0 is_stmt 1
 394 01a4 4A4B     		ldr	r3, .L20+56
 395 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 396 01a8 1846     		mov	r0, r3
 397 01aa FFF7FEFF 		bl	LCD_PrintU32Number
 175:main.c        ****         
 176:main.c        ****         // zet elke seconde maximum inputwaarde op het LCD
 177:main.c        ****         if (cyclusTel >= 100) {
 398              		.loc 1 177 0
 399 01ae 444B     		ldr	r3, .L20+40
 400 01b0 1B68     		ldr	r3, [r3]
 401 01b2 632B     		cmp	r3, #99
 402 01b4 65D9     		bls	.L10
 178:main.c        ****             cyclusTel = 0;
 403              		.loc 1 178 0
 404 01b6 424B     		ldr	r3, .L20+40
 405 01b8 0022     		movs	r2, #0
 406 01ba 1A60     		str	r2, [r3]
 179:main.c        ****             LCD_Position(0u, 6);
 407              		.loc 1 179 0
 408 01bc 0621     		movs	r1, #6
 409 01be 0020     		movs	r0, #0
 410 01c0 FFF7FEFF 		bl	LCD_Position
 180:main.c        ****             LCD_PutChar(ClipIndicator); 
 411              		.loc 1 180 0
 412 01c4 404B     		ldr	r3, .L20+48
 413 01c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 414 01c8 1846     		mov	r0, r3
 415 01ca FFF7FEFF 		bl	LCD_PutChar
 181:main.c        ****             ClipIndicator = ' ';
 416              		.loc 1 181 0
 417 01ce 3E4B     		ldr	r3, .L20+48
 418 01d0 2022     		movs	r2, #32
 419 01d2 1A70     		strb	r2, [r3]
 182:main.c        ****             LCD_Position(1u, 5);
 420              		.loc 1 182 0
 421 01d4 0521     		movs	r1, #5
 422 01d6 0120     		movs	r0, #1
 423 01d8 FFF7FEFF 		bl	LCD_Position
 183:main.c        ****             if (maxL < 10000) LCD_PutChar(' ');
 424              		.loc 1 183 0
 425 01dc 3D4B     		ldr	r3, .L20+60
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 12


 426 01de 1B68     		ldr	r3, [r3]
 427 01e0 42F20F72 		movw	r2, #9999
 428 01e4 9342     		cmp	r3, r2
 429 01e6 02DC     		bgt	.L11
 430              		.loc 1 183 0 is_stmt 0 discriminator 1
 431 01e8 2020     		movs	r0, #32
 432 01ea FFF7FEFF 		bl	LCD_PutChar
 433              	.L11:
 184:main.c        ****             if (maxL < 1000)  LCD_PutChar(' ');
 434              		.loc 1 184 0 is_stmt 1
 435 01ee 394B     		ldr	r3, .L20+60
 436 01f0 1B68     		ldr	r3, [r3]
 437 01f2 B3F57A7F 		cmp	r3, #1000
 438 01f6 02DA     		bge	.L12
 439              		.loc 1 184 0 is_stmt 0 discriminator 1
 440 01f8 2020     		movs	r0, #32
 441 01fa FFF7FEFF 		bl	LCD_PutChar
 442              	.L12:
 185:main.c        ****             if (maxL < 100)   LCD_PutChar(' ');
 443              		.loc 1 185 0 is_stmt 1
 444 01fe 354B     		ldr	r3, .L20+60
 445 0200 1B68     		ldr	r3, [r3]
 446 0202 632B     		cmp	r3, #99
 447 0204 02DC     		bgt	.L13
 448              		.loc 1 185 0 is_stmt 0 discriminator 1
 449 0206 2020     		movs	r0, #32
 450 0208 FFF7FEFF 		bl	LCD_PutChar
 451              	.L13:
 186:main.c        ****             if (maxL < 10)    LCD_PutChar(' ');
 452              		.loc 1 186 0 is_stmt 1
 453 020c 314B     		ldr	r3, .L20+60
 454 020e 1B68     		ldr	r3, [r3]
 455 0210 092B     		cmp	r3, #9
 456 0212 02DC     		bgt	.L14
 457              		.loc 1 186 0 is_stmt 0 discriminator 1
 458 0214 2020     		movs	r0, #32
 459 0216 FFF7FEFF 		bl	LCD_PutChar
 460              	.L14:
 187:main.c        ****             LCD_PrintNumber(maxL);
 461              		.loc 1 187 0 is_stmt 1
 462 021a 2E4B     		ldr	r3, .L20+60
 463 021c 1B68     		ldr	r3, [r3]
 464 021e 9BB2     		uxth	r3, r3
 465 0220 1846     		mov	r0, r3
 466 0222 FFF7FEFF 		bl	LCD_PrintU32Number
 188:main.c        ****             maxL = 0; 
 467              		.loc 1 188 0
 468 0226 2B4B     		ldr	r3, .L20+60
 469 0228 0022     		movs	r2, #0
 470 022a 1A60     		str	r2, [r3]
 189:main.c        ****             LCD_PutChar(' ');
 471              		.loc 1 189 0
 472 022c 2020     		movs	r0, #32
 473 022e FFF7FEFF 		bl	LCD_PutChar
 190:main.c        ****             if (maxR < 10000) LCD_PutChar(' ');
 474              		.loc 1 190 0
 475 0232 294B     		ldr	r3, .L20+64
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 13


 476 0234 1B68     		ldr	r3, [r3]
 477 0236 42F20F72 		movw	r2, #9999
 478 023a 9342     		cmp	r3, r2
 479 023c 02DC     		bgt	.L15
 480              		.loc 1 190 0 is_stmt 0 discriminator 1
 481 023e 2020     		movs	r0, #32
 482 0240 FFF7FEFF 		bl	LCD_PutChar
 483              	.L15:
 191:main.c        ****             if (maxR < 1000)  LCD_PutChar(' ');
 484              		.loc 1 191 0 is_stmt 1
 485 0244 244B     		ldr	r3, .L20+64
 486 0246 1B68     		ldr	r3, [r3]
 487 0248 B3F57A7F 		cmp	r3, #1000
 488 024c 02DA     		bge	.L16
 489              		.loc 1 191 0 is_stmt 0 discriminator 1
 490 024e 2020     		movs	r0, #32
 491 0250 FFF7FEFF 		bl	LCD_PutChar
 492              	.L16:
 192:main.c        ****             if (maxR < 100)   LCD_PutChar(' ');
 493              		.loc 1 192 0 is_stmt 1
 494 0254 204B     		ldr	r3, .L20+64
 495 0256 1B68     		ldr	r3, [r3]
 496 0258 632B     		cmp	r3, #99
 497 025a 02DC     		bgt	.L17
 498              		.loc 1 192 0 is_stmt 0 discriminator 1
 499 025c 2020     		movs	r0, #32
 500 025e FFF7FEFF 		bl	LCD_PutChar
 501              	.L17:
 193:main.c        ****             if (maxR < 10)    LCD_PutChar(' ');
 502              		.loc 1 193 0 is_stmt 1
 503 0262 1D4B     		ldr	r3, .L20+64
 504 0264 1B68     		ldr	r3, [r3]
 505 0266 092B     		cmp	r3, #9
 506 0268 02DC     		bgt	.L18
 507              		.loc 1 193 0 is_stmt 0 discriminator 1
 508 026a 2020     		movs	r0, #32
 509 026c FFF7FEFF 		bl	LCD_PutChar
 510              	.L18:
 194:main.c        ****             LCD_PrintNumber(maxR);
 511              		.loc 1 194 0 is_stmt 1
 512 0270 194B     		ldr	r3, .L20+64
 513 0272 1B68     		ldr	r3, [r3]
 514 0274 9BB2     		uxth	r3, r3
 515 0276 1846     		mov	r0, r3
 516 0278 FFF7FEFF 		bl	LCD_PrintU32Number
 195:main.c        ****             maxR = 0;
 517              		.loc 1 195 0
 518 027c 164B     		ldr	r3, .L20+64
 519 027e 0022     		movs	r2, #0
 520 0280 1A60     		str	r2, [r3]
 521              	.L10:
 196:main.c        ****         }
 197:main.c        ****         cyclusTel++;
 522              		.loc 1 197 0
 523 0282 0F4B     		ldr	r3, .L20+40
 524 0284 1B68     		ldr	r3, [r3]
 525 0286 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 14


 526 0288 0D4A     		ldr	r2, .L20+40
 527 028a 1360     		str	r3, [r2]
 198:main.c        ****         CyDelayUs(1000);
 528              		.loc 1 198 0
 529 028c 4FF47A70 		mov	r0, #1000
 530 0290 FFF7FEFF 		bl	CyDelayUs
 199:main.c        ****     }
 531              		.loc 1 199 0
 532 0294 47E7     		b	.L19
 533              	.L21:
 534 0296 00BF     		.align	2
 535              	.L20:
 536 0298 00000000 		.word	.LC0
 537 029c 14000000 		.word	.LC1
 538 02a0 28000000 		.word	.LC2
 539 02a4 38000000 		.word	.LC3
 540 02a8 4C000000 		.word	.LC4
 541 02ac 5C000000 		.word	.LC5
 542 02b0 00000000 		.word	sampleUit
 543 02b4 98C70040 		.word	1073792920
 544 02b8 00000000 		.word	sampleIntTx_ISR
 545 02bc 00000000 		.word	sampleIntRx_ISR
 546 02c0 00000000 		.word	cyclusTel
 547 02c4 00000000 		.word	LineVolume
 548 02c8 00000000 		.word	ClipIndicator
 549 02cc 00000000 		.word	HPvolume
 550 02d0 00000000 		.word	displayVolume
 551 02d4 00000000 		.word	maxL
 552 02d8 00000000 		.word	maxR
 553              		.cfi_endproc
 554              	.LFE64:
 555              		.size	main, .-main
 556              		.text
 557              	.Letext0:
 558              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 559              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.1\\psoc creator\\import\\gnu\\arm\\5.4.
 560              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 561              		.file 5 "Generated_Source\\PSoC5/core_cm3.h"
 562              		.file 6 "./dma.h"
 563              		.section	.debug_info,"",%progbits
 564              	.Ldebug_info0:
 565 0000 F4010000 		.4byte	0x1f4
 566 0004 0400     		.2byte	0x4
 567 0006 00000000 		.4byte	.Ldebug_abbrev0
 568 000a 04       		.byte	0x4
 569 000b 01       		.uleb128 0x1
 570 000c 00000000 		.4byte	.LASF35
 571 0010 0C       		.byte	0xc
 572 0011 8A010000 		.4byte	.LASF36
 573 0015 AB010000 		.4byte	.LASF37
 574 0019 00000000 		.4byte	.Ldebug_ranges0+0
 575 001d 00000000 		.4byte	0
 576 0021 00000000 		.4byte	.Ldebug_line0
 577 0025 02       		.uleb128 0x2
 578 0026 01       		.byte	0x1
 579 0027 06       		.byte	0x6
 580 0028 45020000 		.4byte	.LASF0
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 15


 581 002c 02       		.uleb128 0x2
 582 002d 01       		.byte	0x1
 583 002e 08       		.byte	0x8
 584 002f C6000000 		.4byte	.LASF1
 585 0033 02       		.uleb128 0x2
 586 0034 02       		.byte	0x2
 587 0035 05       		.byte	0x5
 588 0036 A1010000 		.4byte	.LASF2
 589 003a 02       		.uleb128 0x2
 590 003b 02       		.byte	0x2
 591 003c 07       		.byte	0x7
 592 003d F1000000 		.4byte	.LASF3
 593 0041 03       		.uleb128 0x3
 594 0042 8E000000 		.4byte	.LASF9
 595 0046 02       		.byte	0x2
 596 0047 3F       		.byte	0x3f
 597 0048 4C000000 		.4byte	0x4c
 598 004c 02       		.uleb128 0x2
 599 004d 04       		.byte	0x4
 600 004e 05       		.byte	0x5
 601 004f 30020000 		.4byte	.LASF4
 602 0053 02       		.uleb128 0x2
 603 0054 04       		.byte	0x4
 604 0055 07       		.byte	0x7
 605 0056 DF000000 		.4byte	.LASF5
 606 005a 02       		.uleb128 0x2
 607 005b 08       		.byte	0x8
 608 005c 05       		.byte	0x5
 609 005d 7C010000 		.4byte	.LASF6
 610 0061 02       		.uleb128 0x2
 611 0062 08       		.byte	0x8
 612 0063 07       		.byte	0x7
 613 0064 54010000 		.4byte	.LASF7
 614 0068 04       		.uleb128 0x4
 615 0069 04       		.byte	0x4
 616 006a 05       		.byte	0x5
 617 006b 696E7400 		.ascii	"int\000"
 618 006f 02       		.uleb128 0x2
 619 0070 04       		.byte	0x4
 620 0071 07       		.byte	0x7
 621 0072 47010000 		.4byte	.LASF8
 622 0076 03       		.uleb128 0x3
 623 0077 6B010000 		.4byte	.LASF10
 624 007b 03       		.byte	0x3
 625 007c 2C       		.byte	0x2c
 626 007d 41000000 		.4byte	0x41
 627 0081 05       		.uleb128 0x5
 628 0082 1C020000 		.4byte	.LASF11
 629 0086 04       		.byte	0x4
 630 0087 9201     		.2byte	0x192
 631 0089 2C000000 		.4byte	0x2c
 632 008d 05       		.uleb128 0x5
 633 008e 2F010000 		.4byte	.LASF12
 634 0092 04       		.byte	0x4
 635 0093 9301     		.2byte	0x193
 636 0095 3A000000 		.4byte	0x3a
 637 0099 05       		.uleb128 0x5
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 16


 638 009a 40010000 		.4byte	.LASF13
 639 009e 04       		.byte	0x4
 640 009f 9401     		.2byte	0x194
 641 00a1 53000000 		.4byte	0x53
 642 00a5 05       		.uleb128 0x5
 643 00a6 D9000000 		.4byte	.LASF14
 644 00aa 04       		.byte	0x4
 645 00ab 9601     		.2byte	0x196
 646 00ad 33000000 		.4byte	0x33
 647 00b1 02       		.uleb128 0x2
 648 00b2 04       		.byte	0x4
 649 00b3 04       		.byte	0x4
 650 00b4 B9000000 		.4byte	.LASF15
 651 00b8 02       		.uleb128 0x2
 652 00b9 08       		.byte	0x8
 653 00ba 04       		.byte	0x4
 654 00bb 23010000 		.4byte	.LASF16
 655 00bf 02       		.uleb128 0x2
 656 00c0 01       		.byte	0x1
 657 00c1 08       		.byte	0x8
 658 00c2 91010000 		.4byte	.LASF17
 659 00c6 05       		.uleb128 0x5
 660 00c7 D4000000 		.4byte	.LASF18
 661 00cb 04       		.byte	0x4
 662 00cc 3C02     		.2byte	0x23c
 663 00ce D2000000 		.4byte	0xd2
 664 00d2 06       		.uleb128 0x6
 665 00d3 81000000 		.4byte	0x81
 666 00d7 02       		.uleb128 0x2
 667 00d8 08       		.byte	0x8
 668 00d9 04       		.byte	0x4
 669 00da 39020000 		.4byte	.LASF19
 670 00de 02       		.uleb128 0x2
 671 00df 04       		.byte	0x4
 672 00e0 07       		.byte	0x7
 673 00e1 73010000 		.4byte	.LASF20
 674 00e5 07       		.uleb128 0x7
 675 00e6 04010000 		.4byte	.LASF21
 676 00ea 01       		.byte	0x1
 677 00eb 3A       		.byte	0x3a
 678 00ec 00000000 		.4byte	.LFB63
 679 00f0 B8000000 		.4byte	.LFE63-.LFB63
 680 00f4 01       		.uleb128 0x1
 681 00f5 9C       		.byte	0x9c
 682 00f6 08       		.uleb128 0x8
 683 00f7 2A010000 		.4byte	.LASF22
 684 00fb 01       		.byte	0x1
 685 00fc 5E       		.byte	0x5e
 686 00fd 68000000 		.4byte	0x68
 687 0101 00000000 		.4byte	.LFB64
 688 0105 DC020000 		.4byte	.LFE64-.LFB64
 689 0109 01       		.uleb128 0x1
 690 010a 9C       		.byte	0x9c
 691 010b 09       		.uleb128 0x9
 692 010c 16010000 		.4byte	.LASF23
 693 0110 05       		.byte	0x5
 694 0111 1207     		.2byte	0x712
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 17


 695 0113 17010000 		.4byte	0x117
 696 0117 06       		.uleb128 0x6
 697 0118 76000000 		.4byte	0x76
 698 011c 0A       		.uleb128 0xa
 699 011d 81000000 		.4byte	0x81
 700 0121 2C010000 		.4byte	0x12c
 701 0125 0B       		.uleb128 0xb
 702 0126 DE000000 		.4byte	0xde
 703 012a 03       		.byte	0x3
 704 012b 00       		.byte	0
 705 012c 0C       		.uleb128 0xc
 706 012d 5B020000 		.4byte	.LASF24
 707 0131 06       		.byte	0x6
 708 0132 13       		.byte	0x13
 709 0133 1C010000 		.4byte	0x11c
 710 0137 05       		.uleb128 0x5
 711 0138 03       		.byte	0x3
 712 0139 00000000 		.4byte	rxBuff
 713 013d 0C       		.uleb128 0xc
 714 013e BF000000 		.4byte	.LASF25
 715 0142 06       		.byte	0x6
 716 0143 14       		.byte	0x14
 717 0144 1C010000 		.4byte	0x11c
 718 0148 05       		.uleb128 0x5
 719 0149 03       		.byte	0x3
 720 014a 00000000 		.4byte	txBuff
 721 014e 0A       		.uleb128 0xa
 722 014f A5000000 		.4byte	0xa5
 723 0153 5E010000 		.4byte	0x15e
 724 0157 0B       		.uleb128 0xb
 725 0158 DE000000 		.4byte	0xde
 726 015c 01       		.byte	0x1
 727 015d 00       		.byte	0
 728 015e 0C       		.uleb128 0xc
 729 015f 62020000 		.4byte	.LASF26
 730 0163 06       		.byte	0x6
 731 0164 17       		.byte	0x17
 732 0165 4E010000 		.4byte	0x14e
 733 0169 05       		.uleb128 0x5
 734 016a 03       		.byte	0x3
 735 016b 00000000 		.4byte	sampleIn
 736 016f 0C       		.uleb128 0xc
 737 0170 36010000 		.4byte	.LASF27
 738 0174 06       		.byte	0x6
 739 0175 18       		.byte	0x18
 740 0176 4E010000 		.4byte	0x14e
 741 017a 05       		.uleb128 0x5
 742 017b 03       		.byte	0x3
 743 017c 00000000 		.4byte	sampleUit
 744 0180 0C       		.uleb128 0xc
 745 0181 9D000000 		.4byte	.LASF28
 746 0185 01       		.byte	0x1
 747 0186 36       		.byte	0x36
 748 0187 81000000 		.4byte	0x81
 749 018b 05       		.uleb128 0x5
 750 018c 03       		.byte	0x3
 751 018d 00000000 		.4byte	HPvolume
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 18


 752 0191 0C       		.uleb128 0xc
 753 0192 A6000000 		.4byte	.LASF29
 754 0196 01       		.byte	0x1
 755 0197 36       		.byte	0x36
 756 0198 81000000 		.4byte	0x81
 757 019c 05       		.uleb128 0x5
 758 019d 03       		.byte	0x3
 759 019e 00000000 		.4byte	displayVolume
 760 01a2 0C       		.uleb128 0xc
 761 01a3 96010000 		.4byte	.LASF30
 762 01a7 01       		.byte	0x1
 763 01a8 36       		.byte	0x36
 764 01a9 81000000 		.4byte	0x81
 765 01ad 05       		.uleb128 0x5
 766 01ae 03       		.byte	0x3
 767 01af 00000000 		.4byte	LineVolume
 768 01b3 0C       		.uleb128 0xc
 769 01b4 22020000 		.4byte	.LASF31
 770 01b8 01       		.byte	0x1
 771 01b9 36       		.byte	0x36
 772 01ba 81000000 		.4byte	0x81
 773 01be 05       		.uleb128 0x5
 774 01bf 03       		.byte	0x3
 775 01c0 00000000 		.4byte	ClipIndicator
 776 01c4 0C       		.uleb128 0xc
 777 01c5 98000000 		.4byte	.LASF32
 778 01c9 01       		.byte	0x1
 779 01ca 37       		.byte	0x37
 780 01cb 68000000 		.4byte	0x68
 781 01cf 05       		.uleb128 0x5
 782 01d0 03       		.byte	0x3
 783 01d1 00000000 		.4byte	maxL
 784 01d5 0C       		.uleb128 0xc
 785 01d6 B4000000 		.4byte	.LASF33
 786 01da 01       		.byte	0x1
 787 01db 37       		.byte	0x37
 788 01dc 68000000 		.4byte	0x68
 789 01e0 05       		.uleb128 0x5
 790 01e1 03       		.byte	0x3
 791 01e2 00000000 		.4byte	maxR
 792 01e6 0C       		.uleb128 0xc
 793 01e7 51020000 		.4byte	.LASF34
 794 01eb 01       		.byte	0x1
 795 01ec 38       		.byte	0x38
 796 01ed 99000000 		.4byte	0x99
 797 01f1 05       		.uleb128 0x5
 798 01f2 03       		.byte	0x3
 799 01f3 00000000 		.4byte	cyclusTel
 800 01f7 00       		.byte	0
 801              		.section	.debug_abbrev,"",%progbits
 802              	.Ldebug_abbrev0:
 803 0000 01       		.uleb128 0x1
 804 0001 11       		.uleb128 0x11
 805 0002 01       		.byte	0x1
 806 0003 25       		.uleb128 0x25
 807 0004 0E       		.uleb128 0xe
 808 0005 13       		.uleb128 0x13
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 19


 809 0006 0B       		.uleb128 0xb
 810 0007 03       		.uleb128 0x3
 811 0008 0E       		.uleb128 0xe
 812 0009 1B       		.uleb128 0x1b
 813 000a 0E       		.uleb128 0xe
 814 000b 55       		.uleb128 0x55
 815 000c 17       		.uleb128 0x17
 816 000d 11       		.uleb128 0x11
 817 000e 01       		.uleb128 0x1
 818 000f 10       		.uleb128 0x10
 819 0010 17       		.uleb128 0x17
 820 0011 00       		.byte	0
 821 0012 00       		.byte	0
 822 0013 02       		.uleb128 0x2
 823 0014 24       		.uleb128 0x24
 824 0015 00       		.byte	0
 825 0016 0B       		.uleb128 0xb
 826 0017 0B       		.uleb128 0xb
 827 0018 3E       		.uleb128 0x3e
 828 0019 0B       		.uleb128 0xb
 829 001a 03       		.uleb128 0x3
 830 001b 0E       		.uleb128 0xe
 831 001c 00       		.byte	0
 832 001d 00       		.byte	0
 833 001e 03       		.uleb128 0x3
 834 001f 16       		.uleb128 0x16
 835 0020 00       		.byte	0
 836 0021 03       		.uleb128 0x3
 837 0022 0E       		.uleb128 0xe
 838 0023 3A       		.uleb128 0x3a
 839 0024 0B       		.uleb128 0xb
 840 0025 3B       		.uleb128 0x3b
 841 0026 0B       		.uleb128 0xb
 842 0027 49       		.uleb128 0x49
 843 0028 13       		.uleb128 0x13
 844 0029 00       		.byte	0
 845 002a 00       		.byte	0
 846 002b 04       		.uleb128 0x4
 847 002c 24       		.uleb128 0x24
 848 002d 00       		.byte	0
 849 002e 0B       		.uleb128 0xb
 850 002f 0B       		.uleb128 0xb
 851 0030 3E       		.uleb128 0x3e
 852 0031 0B       		.uleb128 0xb
 853 0032 03       		.uleb128 0x3
 854 0033 08       		.uleb128 0x8
 855 0034 00       		.byte	0
 856 0035 00       		.byte	0
 857 0036 05       		.uleb128 0x5
 858 0037 16       		.uleb128 0x16
 859 0038 00       		.byte	0
 860 0039 03       		.uleb128 0x3
 861 003a 0E       		.uleb128 0xe
 862 003b 3A       		.uleb128 0x3a
 863 003c 0B       		.uleb128 0xb
 864 003d 3B       		.uleb128 0x3b
 865 003e 05       		.uleb128 0x5
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 20


 866 003f 49       		.uleb128 0x49
 867 0040 13       		.uleb128 0x13
 868 0041 00       		.byte	0
 869 0042 00       		.byte	0
 870 0043 06       		.uleb128 0x6
 871 0044 35       		.uleb128 0x35
 872 0045 00       		.byte	0
 873 0046 49       		.uleb128 0x49
 874 0047 13       		.uleb128 0x13
 875 0048 00       		.byte	0
 876 0049 00       		.byte	0
 877 004a 07       		.uleb128 0x7
 878 004b 2E       		.uleb128 0x2e
 879 004c 00       		.byte	0
 880 004d 3F       		.uleb128 0x3f
 881 004e 19       		.uleb128 0x19
 882 004f 03       		.uleb128 0x3
 883 0050 0E       		.uleb128 0xe
 884 0051 3A       		.uleb128 0x3a
 885 0052 0B       		.uleb128 0xb
 886 0053 3B       		.uleb128 0x3b
 887 0054 0B       		.uleb128 0xb
 888 0055 27       		.uleb128 0x27
 889 0056 19       		.uleb128 0x19
 890 0057 11       		.uleb128 0x11
 891 0058 01       		.uleb128 0x1
 892 0059 12       		.uleb128 0x12
 893 005a 06       		.uleb128 0x6
 894 005b 40       		.uleb128 0x40
 895 005c 18       		.uleb128 0x18
 896 005d 9642     		.uleb128 0x2116
 897 005f 19       		.uleb128 0x19
 898 0060 00       		.byte	0
 899 0061 00       		.byte	0
 900 0062 08       		.uleb128 0x8
 901 0063 2E       		.uleb128 0x2e
 902 0064 00       		.byte	0
 903 0065 3F       		.uleb128 0x3f
 904 0066 19       		.uleb128 0x19
 905 0067 03       		.uleb128 0x3
 906 0068 0E       		.uleb128 0xe
 907 0069 3A       		.uleb128 0x3a
 908 006a 0B       		.uleb128 0xb
 909 006b 3B       		.uleb128 0x3b
 910 006c 0B       		.uleb128 0xb
 911 006d 49       		.uleb128 0x49
 912 006e 13       		.uleb128 0x13
 913 006f 11       		.uleb128 0x11
 914 0070 01       		.uleb128 0x1
 915 0071 12       		.uleb128 0x12
 916 0072 06       		.uleb128 0x6
 917 0073 40       		.uleb128 0x40
 918 0074 18       		.uleb128 0x18
 919 0075 9642     		.uleb128 0x2116
 920 0077 19       		.uleb128 0x19
 921 0078 00       		.byte	0
 922 0079 00       		.byte	0
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 21


 923 007a 09       		.uleb128 0x9
 924 007b 34       		.uleb128 0x34
 925 007c 00       		.byte	0
 926 007d 03       		.uleb128 0x3
 927 007e 0E       		.uleb128 0xe
 928 007f 3A       		.uleb128 0x3a
 929 0080 0B       		.uleb128 0xb
 930 0081 3B       		.uleb128 0x3b
 931 0082 05       		.uleb128 0x5
 932 0083 49       		.uleb128 0x49
 933 0084 13       		.uleb128 0x13
 934 0085 3F       		.uleb128 0x3f
 935 0086 19       		.uleb128 0x19
 936 0087 3C       		.uleb128 0x3c
 937 0088 19       		.uleb128 0x19
 938 0089 00       		.byte	0
 939 008a 00       		.byte	0
 940 008b 0A       		.uleb128 0xa
 941 008c 01       		.uleb128 0x1
 942 008d 01       		.byte	0x1
 943 008e 49       		.uleb128 0x49
 944 008f 13       		.uleb128 0x13
 945 0090 01       		.uleb128 0x1
 946 0091 13       		.uleb128 0x13
 947 0092 00       		.byte	0
 948 0093 00       		.byte	0
 949 0094 0B       		.uleb128 0xb
 950 0095 21       		.uleb128 0x21
 951 0096 00       		.byte	0
 952 0097 49       		.uleb128 0x49
 953 0098 13       		.uleb128 0x13
 954 0099 2F       		.uleb128 0x2f
 955 009a 0B       		.uleb128 0xb
 956 009b 00       		.byte	0
 957 009c 00       		.byte	0
 958 009d 0C       		.uleb128 0xc
 959 009e 34       		.uleb128 0x34
 960 009f 00       		.byte	0
 961 00a0 03       		.uleb128 0x3
 962 00a1 0E       		.uleb128 0xe
 963 00a2 3A       		.uleb128 0x3a
 964 00a3 0B       		.uleb128 0xb
 965 00a4 3B       		.uleb128 0x3b
 966 00a5 0B       		.uleb128 0xb
 967 00a6 49       		.uleb128 0x49
 968 00a7 13       		.uleb128 0x13
 969 00a8 3F       		.uleb128 0x3f
 970 00a9 19       		.uleb128 0x19
 971 00aa 02       		.uleb128 0x2
 972 00ab 18       		.uleb128 0x18
 973 00ac 00       		.byte	0
 974 00ad 00       		.byte	0
 975 00ae 00       		.byte	0
 976              		.section	.debug_aranges,"",%progbits
 977 0000 24000000 		.4byte	0x24
 978 0004 0200     		.2byte	0x2
 979 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 22


 980 000a 04       		.byte	0x4
 981 000b 00       		.byte	0
 982 000c 0000     		.2byte	0
 983 000e 0000     		.2byte	0
 984 0010 00000000 		.4byte	.LFB63
 985 0014 B8000000 		.4byte	.LFE63-.LFB63
 986 0018 00000000 		.4byte	.LFB64
 987 001c DC020000 		.4byte	.LFE64-.LFB64
 988 0020 00000000 		.4byte	0
 989 0024 00000000 		.4byte	0
 990              		.section	.debug_ranges,"",%progbits
 991              	.Ldebug_ranges0:
 992 0000 00000000 		.4byte	.LFB63
 993 0004 B8000000 		.4byte	.LFE63
 994 0008 00000000 		.4byte	.LFB64
 995 000c DC020000 		.4byte	.LFE64
 996 0010 00000000 		.4byte	0
 997 0014 00000000 		.4byte	0
 998              		.section	.debug_line,"",%progbits
 999              	.Ldebug_line0:
 1000 0000 22020000 		.section	.debug_str,"MS",%progbits,1
 1000      02005701 
 1000      00000201 
 1000      FB0E0D00 
 1000      01010101 
 1001              	.LASF35:
 1002 0000 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1002      43313120 
 1002      352E342E 
 1002      31203230 
 1002      31363036 
 1003 0033 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1003      20726576 
 1003      6973696F 
 1003      6E203233 
 1003      37373135 
 1004 0066 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1004      66756E63 
 1004      74696F6E 
 1004      2D736563 
 1004      74696F6E 
 1005              	.LASF9:
 1006 008e 5F5F696E 		.ascii	"__int32_t\000"
 1006      7433325F 
 1006      7400
 1007              	.LASF32:
 1008 0098 6D61784C 		.ascii	"maxL\000"
 1008      00
 1009              	.LASF28:
 1010 009d 4850766F 		.ascii	"HPvolume\000"
 1010      6C756D65 
 1010      00
 1011              	.LASF29:
 1012 00a6 64697370 		.ascii	"displayVolume\000"
 1012      6C617956 
 1012      6F6C756D 
 1012      6500
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 23


 1013              	.LASF33:
 1014 00b4 6D617852 		.ascii	"maxR\000"
 1014      00
 1015              	.LASF15:
 1016 00b9 666C6F61 		.ascii	"float\000"
 1016      7400
 1017              	.LASF25:
 1018 00bf 74784275 		.ascii	"txBuff\000"
 1018      666600
 1019              	.LASF1:
 1020 00c6 756E7369 		.ascii	"unsigned char\000"
 1020      676E6564 
 1020      20636861 
 1020      7200
 1021              	.LASF18:
 1022 00d4 72656738 		.ascii	"reg8\000"
 1022      00
 1023              	.LASF14:
 1024 00d9 696E7431 		.ascii	"int16\000"
 1024      3600
 1025              	.LASF5:
 1026 00df 6C6F6E67 		.ascii	"long unsigned int\000"
 1026      20756E73 
 1026      69676E65 
 1026      6420696E 
 1026      7400
 1027              	.LASF3:
 1028 00f1 73686F72 		.ascii	"short unsigned int\000"
 1028      7420756E 
 1028      7369676E 
 1028      65642069 
 1028      6E7400
 1029              	.LASF21:
 1030 0104 62657265 		.ascii	"berekenMetSamples\000"
 1030      6B656E4D 
 1030      65745361 
 1030      6D706C65 
 1030      7300
 1031              	.LASF23:
 1032 0116 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1032      52784275 
 1032      66666572 
 1032      00
 1033              	.LASF16:
 1034 0123 646F7562 		.ascii	"double\000"
 1034      6C6500
 1035              	.LASF22:
 1036 012a 6D61696E 		.ascii	"main\000"
 1036      00
 1037              	.LASF12:
 1038 012f 75696E74 		.ascii	"uint16\000"
 1038      313600
 1039              	.LASF27:
 1040 0136 73616D70 		.ascii	"sampleUit\000"
 1040      6C655569 
 1040      7400
 1041              	.LASF13:
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 24


 1042 0140 75696E74 		.ascii	"uint32\000"
 1042      333200
 1043              	.LASF8:
 1044 0147 756E7369 		.ascii	"unsigned int\000"
 1044      676E6564 
 1044      20696E74 
 1044      00
 1045              	.LASF7:
 1046 0154 6C6F6E67 		.ascii	"long long unsigned int\000"
 1046      206C6F6E 
 1046      6720756E 
 1046      7369676E 
 1046      65642069 
 1047              	.LASF10:
 1048 016b 696E7433 		.ascii	"int32_t\000"
 1048      325F7400 
 1049              	.LASF20:
 1050 0173 73697A65 		.ascii	"sizetype\000"
 1050      74797065 
 1050      00
 1051              	.LASF6:
 1052 017c 6C6F6E67 		.ascii	"long long int\000"
 1052      206C6F6E 
 1052      6720696E 
 1052      7400
 1053              	.LASF36:
 1054 018a 6D61696E 		.ascii	"main.c\000"
 1054      2E6300
 1055              	.LASF17:
 1056 0191 63686172 		.ascii	"char\000"
 1056      00
 1057              	.LASF30:
 1058 0196 4C696E65 		.ascii	"LineVolume\000"
 1058      566F6C75 
 1058      6D6500
 1059              	.LASF2:
 1060 01a1 73686F72 		.ascii	"short int\000"
 1060      7420696E 
 1060      7400
 1061              	.LASF37:
 1062 01ab 433A5C55 		.ascii	"C:\\Users\\Jona\\Documents\\GitHub\\Signaalverwerki"
 1062      73657273 
 1062      5C4A6F6E 
 1062      615C446F 
 1062      63756D65 
 1063 01d9 6E675C4C 		.ascii	"ng\\Labo6\\Opgave1\\IIR_filterProject_DFB\\IIR_filt"
 1063      61626F36 
 1063      5C4F7067 
 1063      61766531 
 1063      5C494952 
 1064 0208 65725072 		.ascii	"erProject_DFB.cydsn\000"
 1064      6F6A6563 
 1064      745F4446 
 1064      422E6379 
 1064      64736E00 
 1065              	.LASF11:
 1066 021c 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\Jona\AppData\Local\Temp\ccHcgmmM.s 			page 25


 1066      3800
 1067              	.LASF31:
 1068 0222 436C6970 		.ascii	"ClipIndicator\000"
 1068      496E6469 
 1068      6361746F 
 1068      7200
 1069              	.LASF4:
 1070 0230 6C6F6E67 		.ascii	"long int\000"
 1070      20696E74 
 1070      00
 1071              	.LASF19:
 1072 0239 6C6F6E67 		.ascii	"long double\000"
 1072      20646F75 
 1072      626C6500 
 1073              	.LASF0:
 1074 0245 7369676E 		.ascii	"signed char\000"
 1074      65642063 
 1074      68617200 
 1075              	.LASF34:
 1076 0251 6379636C 		.ascii	"cyclusTel\000"
 1076      75735465 
 1076      6C00
 1077              	.LASF24:
 1078 025b 72784275 		.ascii	"rxBuff\000"
 1078      666600
 1079              	.LASF26:
 1080 0262 73616D70 		.ascii	"sampleIn\000"
 1080      6C65496E 
 1080      00
 1081              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
